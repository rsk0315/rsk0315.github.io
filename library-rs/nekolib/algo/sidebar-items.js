window.SIDEBAR_ITEMS = {"fn":[["bisect","二分探索で境界を探す。"],["bisect_slice","二分探索で境界を探す。"],["convolve","Karatsuba 法。Карацуба 法？"],["cycle_mu_lambda","周期検出を行う。"],["cycle_nth","$n$ 項目を求める。"],["extremum","三分探索で極値を探す。"],["extremum_float","三分探索で極値を探す。"],["extremum_slice","三分探索で極値を探す。"],["hilbert_mo","Hilbert curve に基づく Mo’s algorithm。"],["index_order_by","添字の順序。"],["index_order_by_key","添字の順序。"],["majority","Boyer–Moore’s majority vote algorithm。"],["minmax","スライスの最小値および最大値を求める。"],["minmax_by","比較関数 `compare` におけるスライスの最小値および最大値を求める。"],["minmax_by_key","キー `key` におけるスライスの最小値および最大値を求める。"],["mo","Mo’s algorithm。"],["next_permutation","辞書順で次の順列の生成。"],["ordered_hash","座標圧縮。"],["parallel_bisect","並列二分探索を行う。"],["prev_permutation",""],["window_bisect","尺取り法で、各始端に対して境界を探す。"]],"mod":[["bisect_","二分探索。"],["exact_cover","Exact cover。"],["extremum","三分探索。"],["extremum_float","三分探索（実数）。"],["hilbert_mo_","Hilbert curve に基づく Mo’s algorithm。"],["index_order","添字の順序。"],["karatsuba","Karatsuba 法。"],["larsch","LARSCH algorithm。"],["majority_","Boyer–Moore’s majority vote algorithm。"],["minmax","スライスの最小値・最大値を求める。"],["mo","Mo’s algorithm。"],["ordered_hash_","座標圧縮。"],["parallel_bisect","並列二分探索。"],["permutation","順列。"],["tortoise_hare","周期検出。"],["window_bisect","尺取り法。"]],"struct":[["Backward",""],["ExactCover","Exact cover。"],["Forward",""],["Larsch","LARSCH algorithm。"],["Permutations",""]]};